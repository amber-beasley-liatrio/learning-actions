name: Build
on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create evaluation-results.json
        run: echo "{}" > evaluation-results.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: evaluation-results
          path: evaluation-results.json
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Run go-semantic-release
        uses: go-semantic-release/action@v1
        id: go-semantic-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: emojis=true
          allow-initial-development-versions: true

      - name: Get release
        if: steps.go-semantic-release.outputs.version != ''
        id: get_release
        run: |
          response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.go-semantic-release.outputs.version}}")
          upload_url=$(echo "$response" | jq -r '.upload_url')
          if [ "$upload_url" = "null" ]; then
            echo "::error::Upload URL is null for the v${{steps.go-semantic-release.outputs.version }} release."
            exit 1
          fi
          echo "UPLOAD_URL=$upload_url" >> $GITHUB_ENV

      - name: Download policy evaluation artifact
        if: steps.go-semantic-release.outputs.version != ''
        uses: actions/download-artifact@v4
        with:
          name: evaluation-results

      - name: Upload Release Asset
        if: steps.go-semantic-release.outputs.version != ''
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
          UPLOAD_URL: ${{ env.UPLOAD_URL }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: evaluation-results.json
          asset_name: evaluation-results
          asset_content_type: application/json